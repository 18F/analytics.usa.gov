
baseurl: ""

# Don't exclude nginx.conf, needs to be copied into _site for
# cloud.gov to pick up on it.
exclude:
- nginx.conf
- webpack.config.js
- ".gitignore"
- Gemfile
- Gemfile.lock
- Makefile
- Staticfile
- README.md
- CONTRIBUTING.md
- LICENSE.md
- dap.md
- uxtesting.md
- ".sass-cache"
- requirements.txt
- system-security-plan.yml
- manifest.yml
- vendor
- .codeclimate.yml
- .eslinrc.yml
- docker-compose.yml
- bin/
- docs/
- fake-data/
- node_modules/
- spec/

# defaults
defaults:
  -
    scope:
      path: ""
      type: agencies
    values:
      layout: default

# Site title and description
title: "analytics.usa.gov | The US government's web traffic."
description: "Official data on web traffic to hundreds of US federal government websites. Published by the Digital Analytics Program."

# Site's own URL
url: https://analytics.usa.gov

# Default dropdown title, will not appear if there are no sub-pages
dropdown_title: All Participating Websites

# Default data url (also needs to be in nginx.conf for cloud.gov deployment)
data_url: https://analytics.usa.gov/data

# twitter information
twitter: usgsa

# Site wide error message
site_wide_error:
  display: true
  title: "Realtime data currently not available"
  body: 'The Google Analytics account that powers analytics.usa.gov is in the process of migrating from Universal Analytics to GA4. Realtime data will become available post migration in the upcoming weeks. Stay tuned as we work hard to bring you the next generation GA4 data.<br><br>For immediate questions about your specific use case, please contact us at <a href="mailto:dap@gsa.gov">dap@gsa.gov</a>'
sass:
  sass_dir: sass
  style: nested

plugins:
  - jekyll-datapage-generator
  - jekyll-redirect-from

page_gen:
  # Write /agency.slug pages
  - data: "agencies"
    template: "data"
    dir_expr: "record['slug']"
    index_files: false
    name_expr: "'index'"
    title_expr: "record['name']"
    # debug: true

  # Write /agency.slug/data pages
  - data: "agencies"
    template: "data_download"
    dir_expr: "record['slug'] + '/data/'"
    index_files: false
    # name: "index"
    # name_expr: "record['slug']"
    name_expr: "'index'"
    title_expr: "record['name']"
    debug: true
