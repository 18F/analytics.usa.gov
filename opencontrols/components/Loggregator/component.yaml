documentation_complete: false
name: Loggregator
references:
- name: Loggregator code
  path: https://github.com/cloudfoundry/loggregator
  type: URL
- name: Cloud Foundry Logging
  path: https://docs.cloudfoundry.org/running/managing-cf/logging.html
  type: URL
satisfies:
- control_key: AU-3 (1)
  covered_by: []
  implementation_status: none
  narrative: 'Loggregator captures and generates logs for incomming and outgoing TCP,
    UDP, ICMP logs in addition to logs generated by applications deployed on Cloud
    Foundry.

    '
  standard_key: NIST-800-53
- control_key: AU-2
  covered_by: []
  implementation_status: none
  narrative: "#### a  \nCloud.Gov provides an audit trail through the bosh tasks command.\
    \ This command shows all actions that an operator has taken with the platform.\
    \ Additionally, operators can redirect Cloud Foundry component logs to a Logstash\
    \ syslog server using the syslog_daemon_config property in the metron_agent job\
    \ of cf-release.\nFor end users, Cloud.Gov records an audit trail of all relevant\
    \ API invocations of and app. The CLI command cf events returns this information.\n\
    \  \n#### b  \nCloud.Gov provides an audit trail through the bosh tasks command.\
    \ This command shows all actions that an operator has taken with the platform.\
    \ For users, Cloud Foundry records an audit trail of all relevant API invocations\
    \ of and app. The CLI command cf events returns this information.\nLoggregator,\
    \ the component responsible for logging, provides a stream of log output from\
    \ 18F applications and system components that interact with a hosted app during\
    \ updates and execution.\n  \n"
  standard_key: NIST-800-53
- control_key: AU-7
  covered_by: []
  implementation_status: none
  narrative: 'Loggregator, the Cloud Foundry component responsible for logging, provides
    a stream of log output from your application and from Cloud Foundry system components
    that interact with your app during updates and execution.

    By default, Loggregator streams logs to your terminal. If you want to persist
    more than the limited amount of logging information that Loggregator can buffer,
    you can drain logs to a third-party log management service. See Third-Party Log
    Management Services.

    Cloud Foundry gathers and stores logs in a best-effort manner. If a client is
    unable to consume log lines quickly enough, the Loggregator buffer may need to
    overwrite some lines before the client has consumed them. a syslog drain or a
    CLI tail can usually keep up with the flow of application logs.

    '
  standard_key: NIST-800-53
schema_version: 2.0
